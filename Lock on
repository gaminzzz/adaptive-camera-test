local Players = game:GetService("Players")
LocalPlayer.CameraMode = Enum.CameraMode.Classic
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()

local gui = script.Parent
local indicator = gui:WaitForChild("LockOnIndicator")

local lockOnTarget = nil
local lockOnRange = 100  -- studs
local isLockedOn = false

-- Toggles lock on when you press "U"
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.U then
		isLockedOn = not isLockedOn
		if not isLockedOn then
			lockOnTarget = nil
			indicator.Visible = false
		end
	end
end)

-- Function to get closest player to center of screen
local function getPlayerInView()
	local closestPlayer = nil
	local closestDistance = math.huge

	for _, player in pairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local hrp = player.Character.HumanoidRootPart
			local screenPoint, onScreen = Camera:WorldToViewportPoint(hrp.Position)

			if onScreen then
				local dx = screenPoint.X - Camera.ViewportSize.X / 2
				local dy = screenPoint.Y - Camera.ViewportSize.Y / 2
				local distance = math.sqrt(dx * dx + dy * dy)

				if distance < 100 and (hrp.Position - Camera.CFrame.Position).Magnitude < lockOnRange then
					if distance < closestDistance then
						closestDistance = distance
						closestPlayer = player
					end
				end
			end
		end
	end

	return closestPlayer
end

RunService.RenderStepped:Connect(function()
	if isLockedOn then
		if not lockOnTarget or not lockOnTarget.Character or not lockOnTarget.Character:FindFirstChild("HumanoidRootPart") then
			lockOnTarget = getPlayerInView()
		end

		if lockOnTarget and lockOnTarget.Character and lockOnTarget.Character:FindFirstChild("HumanoidRootPart") then
			local pos, onScreen = Camera:WorldToViewportPoint(lockOnTarget.Character.HumanoidRootPart.Position)
			if onScreen then
				indicator.Position = UDim2.new(0, pos.X - 5, 0, pos.Y - 5)
				indicator.Visible = true
			else
				indicator.Visible = false
			end
		else
			indicator.Visible = false
		end
	end
end)
RunService:BindToRenderStep("LockOnCamera", Enum.RenderPriority.Camera.Value + 1, function()
	if isLockedOn and lockOnTarget and lockOnTarget.Character and lockOnTarget.Character:FindFirstChild("HumanoidRootPart") then
		local targetHRP = lockOnTarget.Character.HumanoidRootPart
		local cam = workspace.CurrentCamera
		local distance = 10  -- camera distance from target
		local offset = Vector3.new(0, 5, distance)

		-- Calculate new camera position
		local camPos = targetHRP.Position + (targetHRP.CFrame.LookVector * -distance) + Vector3.new(0, 3, 0)
		cam.CFrame = CFrame.new(camPos, targetHRP.Position + Vector3.new(0, 2, 0))
	elseif not isLockedOn then
		RunService:UnbindFromRenderStep("LockOnCamera")
	end
end)
