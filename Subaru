local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local diedPosition = nil
local isReviving = false
local heartbeatConnection = nil

-- Setup revive sound
local reviveSound = Instance.new("Sound")
reviveSound.SoundId = "rbxassetid://18597544476" 
reviveSound.Volume = 1
reviveSound.Name = "ReviveSound"
reviveSound.Parent = workspace

-- Function to revive the player at last known position
local function reviveCharacter()
	if not diedPosition or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
	isReviving = true

	wait(0.1) -- Let Roblox finish part of its own respawn process

	player.Character:MoveTo(diedPosition) -- Teleport back
	reviveSound:Play()
	isReviving = false
end

-- Track character changes
local function onCharacterAdded(character)
	local humanoid = character:WaitForChild("Humanoid")
	local rootPart = character:WaitForChild("HumanoidRootPart")

	-- Disconnect old heartbeat connection if exists
	if heartbeatConnection then
		heartbeatConnection:Disconnect()
	end

	-- Update last known position every frame
	heartbeatConnection = RunService.Heartbeat:Connect(function()
		if rootPart and humanoid.Health > 0 and not isReviving then
			diedPosition = rootPart.Position
		end
	end)

	-- Handle death
	humanoid.Died:Connect(function()
		wait(0.1) -- Slight delay to avoid timing issues

		-- Wait for the character to respawn
		local newChar = player.CharacterAdded:Wait()
		newChar:WaitForChild("HumanoidRootPart")

		reviveCharacter()
	end)
end

-- Initial setup
if player.Character then
	onCharacterAdded(player.Character)
end
player.CharacterAdded:Connect(onCharacterAdded)
