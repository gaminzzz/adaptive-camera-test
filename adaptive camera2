local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local camera = game.Workspace.CurrentCamera

local head = character:WaitForChild("Head")  -- Reference the head for both R15 and R6 rigs

local isFirstPerson = false
local thirdPersonOffset = CFrame.new(0, 5, -10)  -- Default offset for third-person view

local function updateCamera()
    if isFirstPerson then  -- First-person view
        camera.CameraType = Enum.CameraType.Scriptable
        camera.CFrame = head.CFrame  -- Attach camera to the head
        print("First-person view, camera follows head perspective")
    else  -- Third-person view
        camera.CameraType = Enum.CameraType.Custom
        local desiredCFrame = CFrame.new(head.Position + Vector3.new(0, 5, 0) - head.CFrame.LookVector * 10, head.Position)
        camera.CFrame = camera.CFrame:Lerp(desiredCFrame, 0.1)  -- Smooth transition
        print("Third-person view, camera follows head")
    end
end

-- Toggle between first-person and third-person view
local function onKeyPress(input)
    if input.KeyCode == Enum.KeyCode.J then
        isFirstPerson = not isFirstPerson  -- Toggle the view mode
        print("Toggled view mode: " .. (isFirstPerson and "First-person" or "Third-person"))
    end
end

-- Connect to character added event to handle character respawns
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    head = character:WaitForChild("Head")
end)

-- Connect to UserInputService to detect key presses
game:GetService("UserInputService").InputBegan:Connect(onKeyPress)

-- Continuously update the camera's position and orientation
game:GetService("RunService").RenderStepped:Connect(updateCamera)
